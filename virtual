#!/bin/bash

APACHE_SITE_DIR="/etc/apache2/sites-available";

# color a output message
c_echo() {
if [[ $2 == "red" ]]; then
	echo -e "\033[0;31m$1\033[00m"
elif [[ $2 == "green" ]]; then
	echo -e "\033[0;32m$1\033[00m";
else
	echo -e "\033[0;35m$1\033[00m"
fi
}

# Verif the domain definition
verify_domain() {
	if ! expr $1 : '^[a-z0-9_-]\+\.[a-z]\{2,\}$' >> /dev/null; then
		c_echo "âœ— domain is not valid" "red"
		c_echo "eg: domain.dev"
		exit 1
	fi
}

# verify if a program exist, else tell you if you want install it
prog_exist() {
if ! test `which $1`; then
	c_echo "âœ— $1 not found" "red"
	echo -n "Do you want install it? Y/n: "
	read -r response
	case $response in
		"Y"|"y"|"yes"|"")
			apt-get install $1 -y > /dev/null
			exit 0
		;;
		*)
			exit 1
		;;
	esac
	exit 0
fi
}

# `usage` function
usage() {
DEF=" â”€ USAGE:
   sudo $0 add <docroot> <servername> [--with-git]
   sudo $0 remove <servername>
   sudo $0 list
   sudo $0 has <servername>"
FR="
   â”€ \033[0;4mCommande\033[00m
	   add............Ajout un projet
	   remove.........SupprimÃ© un projet
	   has............Informe si le domaine exist
	   list...........List tout le domaine

   â”€ \033[0;4mvaleur\033[00m
	   <docroot>......RÃ©pertoire ou le serveur va trouvÃ© les fichiers Ã  servir.
	   <servername>...Le nom de domaine sur projet

   â”€ \033[0;4moption\033[00m:
	   --with-git.....Initialise un dÃ©pot git. 
	   --with-local-log.....Ajout les logs gÃ©nÃ©rÃ©s par appache dans votre documentroot."
EN="
   â”€ \033[0;4mCommand\033[00m
	   add............Add project
	   remove.........Remove project
	   has............Tell you if domaine exist
	   list...........List all domaine

   â”€ \033[0;4mvalue\033[00m
	   <docroot>......Documentroot.
	   <servername>...You project domain name.

   â”€ \033[0;4moption\033[00m:
	   --with-git.....If has enabled, git repository will be initialize.
	   --with-local-log.....Add apache logs in you documentroot."
EG="
   â”€ Exemples:

    â˜‘ add
    $ sudo $0 add /path/to/my/project/folder project.dev

    â˜‘ remove
    $ sudo $0 remove project.dev

    â˜‘ has
    $ sudo $0 has project.dev

    â˜‘ list
    $ sudo $0 list
   
    \033[0;4mFork me\033[00m to https://github.com/papac/mkvirtualhost.git
"

echo -e "$DEF"

case $1 in
	"help")
		if [[ $2 == "--fr" ]]; then
			echo -e "$FR"
		else
			echo -e "$EN"
		fi
	;;
	*)
		echo -e "$EN"
	;;
esac
echo -e "$EG"
}

# add configuration function
add_vhost() {

local SERVERNAME=""
local HTTP=80
local C=0

local LOGLEV="warn"
local ERRORLOGDIR="$APACHE_LOG_DIR/error.log";
local ACCESSLOGDIR="$APACHE_LOG_DIR/error.log";

if [ ! -d "$1" ]; then
	c_echo "âœ— $1 are not directory" "red"
	echo -n "Do you want create it? Y/n: "
	read -r response
	case $response in
		"Y"|"y"|"yes"|"")
			mkdir -p $1
			chown 1000:1000 -R $1
		;;
		*)
		exit 1
		;;
	esac
fi

if [ -f $APACHE_SITE_DIR/$2".conf" ]; then
	c_echo "âœ— this domaine already exist." "red"
	exit 1
else
	DOCROOT=$1
	SERVERNAME=$2
	C=1
fi

if [[ $C == 1 ]]; then

	for option in $@; do
		if [ $option == "--with-local-log" ]; then
			if [ ! -d "$DOCROOT/.syslog" ]; then
				mkdir "$DOCROOT/.syslog"
			fi
			ERRORLOGDIR="$DOCROOT/.syslog/error.log";
			ACCESSLOGDIR="$DOCROOT/.syslog/access.log";
		fi
	done

echo "<VirtualHost *:$HTTP>
	
	ServerName $SERVERNAME
	serverAlias www.$SERVERNAME
	DocumentRoot $DOCROOT

	<Directory $DOCROOT/>
		Options Indexes Multiviews FollowSymLinks
		AllowOverride All
		require all granted
	</Directory>
	
	ErrorLog $ERRORLOGDIR
	CustomLog $ACCESSLOGDIR combined
	LogLevel $LOGLEV

</VirtualHost>" > $APACHE_SITE_DIR/$SERVERNAME".conf"
	cd $APACHE_SITE_DIR
	a2ensite $SERVERNAME".conf" > /dev/null 2>&1
	if `service apache2 reload > /dev/null`; then
		chmod 775 -R $DOCROOT
		if [ "$3" == "--with-git" -o "$4" == "--with-git" ]; then
			if prog_exist "git"; then
				cd $DOCROOT
				if [ ! -d ".git" ]; then
					git init > /dev/null
					c_echo "âœ“ Initialized empty git repository."
				else
					c_echo "âœ— git repository is alrealy initilazed." "red"
				fi
			fi
		fi
		echo "127.0.0.1 $SERVERNAME www.$SERVERNAME" >> /etc/hosts
		c_echo "âœ“ project domain has created." "green"
		exit 0
	else
		c_echo "âœ— an error is comming" "red"
		a2dissite $SERVERNAME".conf" > /dev/null
		rm $APACHE_SITE_DIR/$SERVERNAME".conf"
		exit 1
	fi
else
	c_echo "âœ— an error is comming." "red"
	exit 1
fi

}

# delete configuration function
remove_vhost() {
	
	if [ -f "$APACHE_SITE_DIR/$1.conf" ]; then
		
		cd $APACHE_SITE_DIR
		a2dissite "${1}.conf" > /dev/null 2>&1
		service apache2 reload > /dev/null 2>&1
		rm "${1}.conf" 2> /dev/null
		sed -re "/^\n?127\.0\.0\.1\s+${1}\swww.${1}\n?$/ d" < /etc/hosts > /tmp/hosts

		if [ -s /tmp/hosts ]; then
			cp /tmp/hosts /etc/hosts
		fi
		
		c_echo "âœ“ $1 has removed" "green"
		exit 0
	
	else
		c_echo "âœ— this domaine not exist." "red"
		exit 1
	fi
}

# busness logic
PARAM=$1

if ! test `id -u` -eq 0; then
	c_echo "âœ— permission denied" "red";
	exit 1
fi

prog_exist "apache2"

if [[ $PARAM == "add" ]]; then
	verify_domain $3
	case $# in
		3) add_vhost $2 $3 ;;
		4) add_vhost $2 $3 $4 ;;
		5) add_vhost $2 $3 $4 $5 ;;
		*) usage; exit 1 ;;
	esac
elif [[ $PARAM == "remove" ]]; then
	verify_domain $2
	remove_vhost $2
	exit 0
elif [[ $PARAM == "list" ]]; then
	i=0
	for file in `ls /etc/apache2/sites-enabled`; do
		i=$(expr $i + 1)
		len=$(expr length $file)
		end=$(expr $len - 5)
		file=$(expr substr $file 1 $end)
		c_echo "â”” $file" "green"
	done
	c_echo "ðŸ‘‰ ${i} have available"
	exit 0
elif [[ $PARAM == "has" ]]; then
	if [ -f "$APACHE_SITE_DIR/$2.conf" ]; then
		c_echo "âœ— domaine $2 exist." "green"
	else
		c_echo "âœ— domaine $2 not found" "red"
	fi
elif [[ $PARAM == "help" ]]; then
	usage $PARAM $2
	exit 0
else
	usage
	exit 1
fi
